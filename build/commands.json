{
    "0x21": {
        "namespace": "procedures",
        "char": "!",
        "description": "unconditional jumper, if label not exists stops current iteration"
    },
    "0x22": {
        "namespace": "basic",
        "char": "\"",
        "description": "wait time pause in miliseconds / seconds / minutes / hours"
    },
    "0x23": {
        "namespace": "mechanics",
        "char": "#",
        "description": "setup enviroment and global switches / point-of-view changing"
    },
    "0x24": {
        "namespace": "variables",
        "char": "$",
        "description": "point context on variable"
    },
    "0x25": {
        "namespace": "variables",
        "char": "%",
        "description": "modulo of context variable / string length"
    },
    "0x26": {
        "namespace": "logics",
        "char": "&",
        "description": "set 1 to context variable if context variable is not 0 and variable is not 0, else 0"
    },
    "0x27": {
        "namespace": "free",
        "char": "'",
        "description": null
    },
    "0x28": {
        "namespace": "free",
        "char": "(",
        "description": null
    },
    "0x29": {
        "namespace": "free",
        "char": ")",
        "description": null
    },
    "0x2a": {
        "namespace": "variables",
        "char": "*",
        "description": "multiply context variable / get char at"
    },
    "0x2b": {
        "namespace": "variables",
        "char": "+",
        "description": "add to context variable / string append"
    },
    "0x2c": {
        "namespace": "free",
        "char": ",",
        "description": null
    },
    "0x2d": {
        "namespace": "variables",
        "char": "-",
        "description": "sub from context variable / find and remove"
    },
    "0x2e": {
        "namespace": "procedures",
        "char": ".",
        "description": "label for code jumping"
    },
    "0x2f": {
        "namespace": "logics",
        "char": "/",
        "description": "set 1 to context variable if context variable is lesser than variable, else 0"
    },
    "0x3a": {
        "namespace": "variables",
        "char": ":",
        "description": "divide context variable / insert at"
    },
    "0x3b": {
        "namespace": "logics",
        "char": ";",
        "description": "set 1 to context variable if context variable is not 0 or variable is not 0, else 0"
    },
    "0x3c": {
        "namespace": "basic",
        "char": "<",
        "description": "print static output / print output from variable"
    },
    "0x3d": {
        "namespace": "variables",
        "char": "=",
        "description": "set context variable"
    },
    "0x3e": {
        "namespace": "basic",
        "char": ">",
        "description": "read input to file / to variable"
    },
    "0x3f": {
        "namespace": "procedures",
        "char": "?",
        "description": "conditional jumper, based on if context variable is not 0 jump"
    },
    "0x40": {
        "namespace": "mechanics",
        "char": "@",
        "description": "import code from file"
    },
    "0x5b": {
        "namespace": "variables",
        "char": "[",
        "description": "move variable context to left"
    },
    "0x5c": {
        "namespace": "logics",
        "char": "\\",
        "description": "set 1 to context variable if context variable is greater than variable, else 0"
    },
    "0x5d": {
        "namespace": "variables",
        "char": "]",
        "description": "move variable context to right"
    },
    "0x5e": {
        "namespace": "basic",
        "char": "^",
        "description": "release key(s)"
    },
    "0x5f": {
        "namespace": "basic",
        "char": "_",
        "description": "press key(s)"
    },
    "0x60": {
        "namespace": "free",
        "char": "`",
        "description": null
    },
    "0x7b": {
        "namespace": "variables",
        "char": "{",
        "description": "copy value from variable to context variable"
    },
    "0x7c": {
        "namespace": "logics",
        "char": "|",
        "description": "set 1 to context variable if context variable is equal to variable, else 0"
    },
    "0x7d": {
        "namespace": "variables",
        "char": "}",
        "description": "copy value from context variable to variable"
    },
    "0x7e": {
        "namespace": "logics",
        "char": "~",
        "description": "if context variable is 0 set 1, else 0"
    }
}
